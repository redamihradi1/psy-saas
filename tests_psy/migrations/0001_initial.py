# Generated by Django 5.2.7 on 2025-10-16 19:28

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0003_alter_license_max_patients'),
        ('cabinet', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NormeCapaciteConcentration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_standard', models.IntegerField(verbose_name='Note standard')),
                ('percentile', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Percentile')),
                ('age_min', models.IntegerField(verbose_name='Âge minimum')),
                ('age_max', models.IntegerField(verbose_name='Âge maximum')),
                ('valeur_min', models.IntegerField(verbose_name='Valeur minimum')),
                ('valeur_max', models.IntegerField(verbose_name='Valeur maximum')),
            ],
            options={
                'verbose_name': 'Norme de capacité de concentration',
                'verbose_name_plural': 'Normes de capacité de concentration',
                'ordering': ['note_standard', 'percentile', 'age_min'],
            },
        ),
        migrations.CreateModel(
            name='NormeExactitude',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_standard', models.IntegerField(verbose_name='Note standard')),
                ('percentile', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Percentile')),
                ('age_min', models.IntegerField(verbose_name='Âge minimum')),
                ('age_max', models.IntegerField(verbose_name='Âge maximum')),
                ('valeur_min', models.IntegerField(verbose_name='Valeur minimum')),
                ('valeur_max', models.IntegerField(verbose_name='Valeur maximum')),
            ],
            options={
                'verbose_name': "Norme d'exactitude",
                'verbose_name_plural': "Normes d'exactitude",
                'ordering': ['note_standard', 'percentile', 'age_min'],
            },
        ),
        migrations.CreateModel(
            name='NormeRythmeTraitement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_standard', models.IntegerField(verbose_name='Note standard')),
                ('percentile', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Percentile')),
                ('age_min', models.IntegerField(verbose_name='Âge minimum')),
                ('age_max', models.IntegerField(verbose_name='Âge maximum')),
                ('valeur_min', models.IntegerField(verbose_name='Valeur minimum')),
                ('valeur_max', models.IntegerField(verbose_name='Valeur maximum')),
            ],
            options={
                'verbose_name': 'Norme de rythme de traitement',
                'verbose_name_plural': 'Normes de rythme de traitement',
                'ordering': ['note_standard', 'percentile', 'age_min'],
            },
        ),
        migrations.CreateModel(
            name='TestD2R',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_passation', models.DateTimeField(auto_now_add=True, verbose_name='Date de passation')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('code', models.CharField(max_length=50, verbose_name='Code du test')),
                ('date', models.DateField(verbose_name='Date')),
                ('age', models.IntegerField(verbose_name='Âge')),
                ('sexe', models.CharField(choices=[('M', 'Masculin'), ('F', 'Féminin')], max_length=1, verbose_name='Sexe')),
                ('type_ecole', models.CharField(blank=True, max_length=100, null=True, verbose_name="Type d'école")),
                ('etudes', models.CharField(blank=True, max_length=100, null=True, verbose_name='Études')),
                ('profession', models.CharField(blank=True, max_length=100, null=True, verbose_name='Profession')),
                ('correction_vue', models.CharField(choices=[('OP', 'Oui portées'), ('ON', 'Oui non portées'), ('NO', 'Non')], max_length=2, verbose_name='Correction de la vue')),
                ('lateralite', models.CharField(choices=[('D', 'Droitier'), ('G', 'Gaucher')], max_length=1, verbose_name='Latéralité')),
                ('reponses_correctes', models.IntegerField(default=0, verbose_name='Réponses correctes')),
                ('reponses_incorrectes', models.IntegerField(default=0, verbose_name='Réponses incorrectes')),
                ('reponses_omises', models.IntegerField(blank=True, default=0, null=True, verbose_name='Réponses omises')),
                ('note_cct', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Note CCT')),
                ('note_exactitude', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Note exactitude')),
                ('capacite_concentration', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Capacité de concentration')),
                ('temps_total', models.IntegerField(default=0, verbose_name='Temps total (secondes)')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.organization', verbose_name='Organisation')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tests_%(class)s', to='cabinet.patient', verbose_name='Patient')),
                ('psychologue', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Psychologue')),
            ],
            options={
                'verbose_name': 'Test D2R',
                'verbose_name_plural': 'Tests D2R',
                'ordering': ['-date_passation'],
            },
        ),
        migrations.CreateModel(
            name='SymboleReference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_passation', models.DateTimeField(auto_now_add=True, verbose_name='Date de passation')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('page', models.IntegerField(verbose_name='Page')),
                ('ligne', models.IntegerField(verbose_name='Ligne')),
                ('position', models.IntegerField(editable=False, verbose_name='Position')),
                ('lettre', models.CharField(choices=[('d', 'd'), ('p', 'p')], max_length=1, verbose_name='Lettre')),
                ('traits_haut', models.IntegerField(choices=[(0, '0'), (1, '1'), (2, '2')], verbose_name='Traits en haut')),
                ('traits_bas', models.IntegerField(choices=[(0, '0'), (1, '1'), (2, '2')], verbose_name='Traits en bas')),
                ('background', models.CharField(choices=[('W', 'White'), ('G', 'Grey'), ('N', 'None')], default='N', max_length=1, verbose_name='Background')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.organization', verbose_name='Organisation')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tests_%(class)s', to='cabinet.patient', verbose_name='Patient')),
                ('psychologue', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Psychologue')),
            ],
            options={
                'verbose_name': 'Symbole de référence',
                'verbose_name_plural': 'Symboles de référence',
                'ordering': ['page', 'ligne', 'position'],
                'unique_together': {('page', 'ligne', 'position', 'organization')},
            },
        ),
    ]
