# Generated by Django 5.2.7 on 2025-10-14 20:40

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0003_alter_license_max_patients'),
    ]

    operations = [
        migrations.CreateModel(
            name='PackMindOffice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_pack', models.CharField(default='Pack Mind Office', max_length=100, verbose_name='Nom du pack')),
                ('nombre_seances_total', models.IntegerField(verbose_name='Nombre de séances total')),
                ('nombre_seances_utilisees', models.IntegerField(default=0, verbose_name='Nombre de séances utilisées')),
                ('date_achat', models.DateField(verbose_name="Date d'achat")),
                ('date_expiration', models.DateField(blank=True, null=True, verbose_name="Date d'expiration")),
                ('prix_pack', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Prix du pack (DHS)')),
                ('statut', models.CharField(choices=[('actif', 'Actif'), ('expire', 'Expiré'), ('suspendu', 'Suspendu')], default='actif', max_length=10, verbose_name='Statut')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.organization', verbose_name='Organisation')),
            ],
            options={
                'verbose_name': 'Pack Mind Office',
                'verbose_name_plural': 'Packs Mind Office',
                'ordering': ['-date_achat'],
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(db_index=True, max_length=100, verbose_name='Nom')),
                ('prenom', models.CharField(db_index=True, max_length=100, verbose_name='Prénom')),
                ('date_naissance', models.DateField(verbose_name='Date de naissance')),
                ('categorie_age', models.CharField(choices=[('adulte', 'Adulte'), ('enfant', 'Enfant')], default='adulte', max_length=10, verbose_name="Catégorie d'âge")),
                ('telephone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Téléphone')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, validators=[django.core.validators.EmailValidator()], verbose_name='Email')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.organization', verbose_name='Organisation')),
            ],
            options={
                'verbose_name': 'Patient',
                'verbose_name_plural': 'Patients',
                'ordering': ['nom', 'prenom'],
            },
        ),
        migrations.CreateModel(
            name='Consultation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_seance', models.DateTimeField(db_index=True, verbose_name='Date et heure de séance')),
                ('duree_minutes', models.IntegerField(default=60, verbose_name='Durée (minutes)')),
                ('type_consultation', models.CharField(choices=[('individuelle', 'Consultation individuelle'), ('couple', 'Thérapie de couple'), ('famille', 'Thérapie familiale'), ('groupe', 'Thérapie de groupe'), ('suivi', 'Consultation de suivi')], default='individuelle', max_length=20, verbose_name='Type de consultation')),
                ('notes_cliniques', models.TextField(blank=True, null=True, verbose_name='Notes cliniques')),
                ('objectifs_seance', models.TextField(blank=True, null=True, verbose_name='Objectifs de la séance')),
                ('exercices_prevus', models.TextField(blank=True, null=True, verbose_name='Exercices prévus')),
                ('suivi_progression', models.TextField(blank=True, null=True, verbose_name='Suivi de progression')),
                ('tarif', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Tarif (DHS)')),
                ('statut_paiement', models.CharField(choices=[('paye', 'Payé'), ('attente', 'En attente'), ('annule', 'Annulé')], default='attente', max_length=10, verbose_name='Statut du paiement')),
                ('date_paiement', models.DateField(blank=True, null=True, verbose_name='Date de paiement')),
                ('lieu_consultation', models.CharField(choices=[('visio', 'Visioconférence'), ('bouskoura', 'Cabinet Bouskoura'), ('mind_office', 'Cabinet Mind Office')], default='visio', max_length=20, verbose_name='Lieu de consultation')),
                ('statut_consultation', models.CharField(choices=[('planifie', 'Planifiée'), ('reporte', 'Reportée'), ('annule', 'Annulée'), ('termine', 'Terminée'), ('absent', 'Patient absent')], default='planifie', max_length=20, verbose_name='Statut de la consultation')),
                ('date_seance_originale', models.DateTimeField(blank=True, null=True, verbose_name='Date de séance originale')),
                ('nombre_reports', models.IntegerField(default=0, verbose_name='Nombre de reports')),
                ('motif_report', models.TextField(blank=True, null=True, verbose_name='Motif du report/annulation')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.organization', verbose_name='Organisation')),
                ('pack_mind_office_utilise', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cabinet.packmindoffice', verbose_name='Pack Mind Office utilisé')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cabinet.patient', verbose_name='Patient')),
            ],
            options={
                'verbose_name': 'Consultation',
                'verbose_name_plural': 'Consultations',
                'ordering': ['-date_seance'],
            },
        ),
        migrations.CreateModel(
            name='Anamnese',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motif_consultation', models.TextField(verbose_name='Motif de consultation')),
                ('antecedents_medicaux', models.TextField(blank=True, null=True, verbose_name='Antécédents médicaux')),
                ('antecedents_familiaux', models.TextField(blank=True, null=True, verbose_name='Antécédents familiaux')),
                ('medicaments_actuels', models.TextField(blank=True, null=True, verbose_name='Médicaments actuels')),
                ('deja_consulte_psy', models.BooleanField(default=False, verbose_name='A déjà consulté un psy')),
                ('situation_professionnelle', models.TextField(blank=True, null=True, verbose_name='Situation professionnelle')),
                ('situation_familiale', models.TextField(blank=True, null=True, verbose_name='Situation familiale')),
                ('troubles_sommeil', models.TextField(blank=True, null=True, verbose_name='Troubles du sommeil')),
                ('troubles_alimentaires', models.TextField(blank=True, null=True, verbose_name='Troubles alimentaires')),
                ('activite_physique', models.TextField(blank=True, null=True, verbose_name='Activité physique régulière')),
                ('hobbies_bien_etre', models.TextField(blank=True, null=True, verbose_name='Hobbies et activités bien-être')),
                ('changements_souhaites', models.TextField(blank=True, null=True, verbose_name='Changements souhaités dans la vie')),
                ('consommation_substances', models.TextField(blank=True, null=True, verbose_name='Consommation de substances')),
                ('niveau_stress', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)], default=5, verbose_name='Niveau de stress (1-10)')),
                ('objectifs_therapie', models.TextField(blank=True, null=True, verbose_name='Objectifs de la thérapie')),
                ('attentes_patient', models.TextField(blank=True, null=True, verbose_name='Attentes du patient')),
                ('contraintes_horaires', models.TextField(blank=True, null=True, verbose_name='Contraintes horaires')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.organization', verbose_name='Organisation')),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cabinet.patient', verbose_name='Patient')),
            ],
            options={
                'verbose_name': 'Anamnèse',
                'verbose_name_plural': 'Anamnèses',
            },
        ),
        migrations.CreateModel(
            name='PatientFichier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_fichier', models.CharField(max_length=255, verbose_name='Nom du fichier')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('categorie', models.CharField(choices=[('anamnese', 'Anamnèse / Bilan initial'), ('compte_rendu', 'Compte-rendu de séance'), ('test_psychologique', 'Test psychologique / Évaluation'), ('ordonnance_psy', 'Ordonnance psychiatrique'), ('certificat', 'Certificat médical / Arrêt'), ('courrier_medical', 'Courrier médical / Correspondance'), ('bilan_medical', 'Bilan médical externe'), ('imagerie', 'Imagerie médicale (IRM, Scanner...)'), ('resultats_analyses', "Résultats d'analyses"), ('document_juridique', 'Document juridique / Expertise'), ('autorisation', 'Autorisation parentale / Tutelle'), ('contrat_soin', 'Contrat de soin / Consentement'), ('suivi_externe', 'Suivi externe (autre praticien)'), ('document_scolaire', 'Document scolaire / Professionnel'), ('autre', 'Autre document')], default='autre', max_length=20, verbose_name='Catégorie')),
                ('fichier', models.FileField(upload_to='patients_fichiers/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'jpg', 'jpeg', 'png', 'gif', 'bmp', 'tiff', 'txt', 'rtf', 'odt', 'xls', 'xlsx', 'ppt', 'pptx'])], verbose_name='Fichier')),
                ('taille_fichier', models.IntegerField(blank=True, null=True, verbose_name='Taille (octets)')),
                ('date_upload', models.DateTimeField(auto_now_add=True, verbose_name="Date d'upload")),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Dernière modification')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.organization', verbose_name='Organisation')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fichiers', to='cabinet.patient', verbose_name='Patient')),
            ],
            options={
                'verbose_name': 'Fichier Patient',
                'verbose_name_plural': 'Fichiers Patients',
                'ordering': ['-date_upload'],
            },
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['organization', 'nom', 'prenom'], name='cabinet_pat_organiz_06dba6_idx'),
        ),
        migrations.AddIndex(
            model_name='consultation',
            index=models.Index(fields=['organization', '-date_seance'], name='cabinet_con_organiz_2d6b4e_idx'),
        ),
        migrations.AddIndex(
            model_name='consultation',
            index=models.Index(fields=['organization', 'statut_paiement'], name='cabinet_con_organiz_eca55a_idx'),
        ),
    ]
